{"is_source_file": true, "format": "Python", "description": "This source file defines REST API routes for managing 'notes' in a FastAPI application, including listing, creating, retrieving, updating, and deleting notes, with user-based access control.", "external_files": ["schemas", "models", "auth", "database"], "external_methods": ["auth.get_current_active_user", "get_db"], "published": ["router"], "classes": [{"name": "APIRouter", "description": "FastAPI's router object for defining API endpoints"}], "methods": [{"name": "list_notes(db: Session = Depends(get_db), current_user: models.User = Depends(auth.get_current_active_user))", "description": "Handles GET requests to list all notes belonging to the current user.", "scope": "", "scopeKind": ""}, {"name": "create_note(note: schemas.NoteCreate, db: Session = Depends(get_db), current_user: models.User = Depends(auth.get_current_active_user))", "description": "Handles POST requests to create a new note for the user.", "scope": "", "scopeKind": ""}, {"name": "get_note(note_id: int, db: Session = Depends(get_db), current_user: models.User = Depends(auth.get_current_active_user))", "description": "Handles GET requests to retrieve a specific note by ID for the current user.", "scope": "", "scopeKind": ""}, {"name": "update_note(note_id: int, patch: schemas.NoteUpdate, db: Session = Depends(get_db), current_user: models.User = Depends(auth.get_current_active_user))", "description": "Handles PUT requests to update an existing note by ID.", "scope": "", "scopeKind": ""}, {"name": "delete_note(note_id: int, db: Session = Depends(get_db), current_user: models.User = Depends(auth.get_current_active_user))", "description": "Handles DELETE requests to delete a note by ID.", "scope": "", "scopeKind": ""}], "calls": ["db.query(models.Note).filter(...).order_by(...).all()", "db.query(models.Note).filter_by(...).first()", "db.add(db_note)", "db.commit()", "db.refresh(db_note)", "db.delete(note)"], "search-terms": ["routes_notes.py", "APIRouter", "notes", "FastAPI", "SQLAlchemy", "auth.get_current_active_user"], "state": 2, "file_id": 15, "knowledge_revision": 32, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/routes_notes.py", "pattern": "/^def create_note(note: schemas.NoteCreate, db: Session = Depends(get_db), current_user: models.Us/", "language": "Python", "kind": "function", "signature": "(note: schemas.NoteCreate, db: Session = Depends(get_db), current_user: models.User = Depends(auth.get_current_active_user))"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/routes_notes.py", "pattern": "/^def delete_note(note_id: int, db: Session = Depends(get_db), current_user: models.User = Depends/", "language": "Python", "kind": "function", "signature": "(note_id: int, db: Session = Depends(get_db), current_user: models.User = Depends(auth.get_current_active_user))"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/routes_notes.py", "pattern": "/^def get_note(note_id: int, db: Session = Depends(get_db), current_user: models.User = Depends(au/", "language": "Python", "kind": "function", "signature": "(note_id: int, db: Session = Depends(get_db), current_user: models.User = Depends(auth.get_current_active_user))"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/routes_notes.py", "pattern": "/^def list_notes(db: Session = Depends(get_db), current_user: models.User = Depends(auth.get_curre/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db), current_user: models.User = Depends(auth.get_current_active_user))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/routes_notes.py", "pattern": "/^router = APIRouter($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/routes_notes.py", "pattern": "/^def update_note(note_id: int, patch: schemas.NoteUpdate, db: Session = Depends(get_db), current_/", "language": "Python", "kind": "function", "signature": "(note_id: int, patch: schemas.NoteUpdate, db: Session = Depends(get_db), current_user: models.User = Depends(auth.get_current_active_user))"}], "hash": "7098f8972c2ff658576a86944028217a", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/routes_notes.py", "fields": [{"name": "router = APIRouter(", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"32": ""}]}