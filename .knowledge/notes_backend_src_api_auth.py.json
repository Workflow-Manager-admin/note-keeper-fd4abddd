{"is_source_file": true, "format": "Python", "description": "This file implements authentication-related functionality for a FastAPI-based backend, including password hashing, JWT token creation, user retrieval, and dependency injection for current user handling.", "external_files": ["database", "models", "schemas"], "external_methods": ["SessionLocal", "User", "TokenData", "OAuth2PasswordBearer", "verify", "hash", "encode", "decode"], "published": ["verify_password", "get_password_hash", "create_access_token", "get_user_by_username", "authenticate_user", "get_current_user", "get_current_active_user"], "classes": [], "methods": [{"name": "get_db()", "description": "Creates and yields a database session, ensuring it is closed after use.", "scope": "", "scopeKind": ""}, {"name": "verify_password(plain_password, hashed_password)", "description": "Verifies a plaintext password matches its hashed version.", "scope": "", "scopeKind": ""}, {"name": "get_password_hash(password)", "description": "Returns a securely hashed version of the given password.", "scope": "", "scopeKind": ""}, {"name": "create_access_token(data: dict, expires_delta: Optional[timedelta] = None)", "description": "Generates a JWT token with optional expiration.", "scope": "", "scopeKind": ""}, {"name": "Optional[User] get_user_by_username(db: Session, username: str)", "description": "Fetches a user record from the database by username.", "scope": "", "scopeKind": ""}, {"name": "authenticate_user(db: Session, username: str, password: str)", "description": "Authenticates credentials; returns user if valid, else False.", "scope": "", "scopeKind": ""}, {"name": "get_current_user(db: Session = Depends(get_db), token: str = Depends(oauth2_scheme))", "description": "Retrieves the current user based on the JWT token, raising HTTPException if invalid.", "scope": "", "scopeKind": ""}, {"name": "get_current_active_user(current_user: User = Depends(get_current_user))", "description": "Checks if the current user is active; currently returns the user directly.", "scope": "", "scopeKind": ""}], "calls": ["SessionLocal", "db.query", "jwt.encode", "jwt.decode", "get_user_by_username"], "search-terms": ["FastAPI auth dependencies", "JWT token handling", "password hashing", "get_current_user"], "state": 2, "file_id": 13, "knowledge_revision": 27, "git_revision": "", "ctags": [{"_type": "tag", "name": "JWT_ALGORITHM", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/auth.py", "pattern": "/^JWT_ALGORITHM = \"HS256\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWT_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/auth.py", "pattern": "/^JWT_EXPIRE_MINUTES = int(os.getenv(\"JWT_EXPIRE_MINUTES\", \"60\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWT_SECRET", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/auth.py", "pattern": "/^JWT_SECRET = os.getenv(\"JWT_SECRET\", \"secret-key\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "authenticate_user", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/auth.py", "pattern": "/^def authenticate_user(db: Session, username: str, password: str):$/", "language": "Python", "kind": "function", "signature": "(db: Session, username: str, password: str)"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/auth.py", "pattern": "/^def create_access_token(data: dict, expires_delta: Optional[timedelta] = None):$/", "language": "Python", "kind": "function", "signature": "(data: dict, expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "get_current_active_user", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/auth.py", "pattern": "/^def get_current_active_user(current_user: User = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/auth.py", "pattern": "/^def get_current_user(db: Session = Depends(get_db), token: str = Depends(oauth2_scheme)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db), token: str = Depends(oauth2_scheme))"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/auth.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/auth.py", "pattern": "/^def get_password_hash(password):$/", "language": "Python", "kind": "function", "signature": "(password)"}, {"_type": "tag", "name": "get_user_by_username", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/auth.py", "pattern": "/^def get_user_by_username(db: Session, username: str) -> Optional[User]:$/", "language": "Python", "typeref": "typename:Optional[User]", "kind": "function", "signature": "(db: Session, username: str)"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/auth.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"auth\\/login\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/auth.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/auth.py", "pattern": "/^def verify_password(plain_password, hashed_password):$/", "language": "Python", "kind": "function", "signature": "(plain_password, hashed_password)"}], "hash": "0628c26a2ec111bb7af3f2f9c3179497", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/auth.py", "fields": [{"name": "JWT_ALGORITHM = \"HS256\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_EXPIRE_MINUTES = int(os.getenv(\"JWT_EXPIRE_MINUTES\", \"60\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_SECRET = os.getenv(\"JWT_SECRET\", \"secret-key\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"auth\\/login\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"27": ""}]}