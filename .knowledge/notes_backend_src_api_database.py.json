{"is_source_file": true, "format": "Python", "description": "This file sets up database connectivity using SQLAlchemy, loads environment variables for database configuration, and initializes database tables. It primarily imports database models and establishes session creation logic.", "external_files": [".env", ".", "sqlalchemy", "sqlalchemy.orm", "sqlalchemy.exc", "dotenv"], "external_methods": ["load_dotenv", "create_engine", "sessionmaker"], "published": ["SessionLocal", "init_db"], "classes": [{"name": "Base", "description": "The declarative base for SQLAlchemy models, imported from models to define database tables."}], "methods": [{"name": "init_db()", "description": "Initializes the database by creating all tables defined in models if they do not already exist.", "scope": "", "scopeKind": ""}], "calls": ["load_dotenv", "os.getenv", "create_engine", "sessionmaker", "Base.metadata.create_all"], "search-terms": ["database connection", "SQLAlchemy setup", "env database url", "init database tables"], "state": 2, "file_id": 11, "knowledge_revision": 24, "git_revision": "", "ctags": [{"_type": "tag", "name": "DATABASE_URL", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/database.py", "pattern": "/^DATABASE_URL = os.getenv(\"POSTGRES_URL\") or os.getenv(\"DATABASE_URL\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SessionLocal", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/database.py", "pattern": "/^SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/database.py", "pattern": "/^engine = create_engine(DATABASE_URL, pool_pre_ping=True)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "init_db", "path": "/home/kavia/workspace/code-generation/note-keeper-fd4abddd/notes_backend/src/api/database.py", "pattern": "/^def init_db():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "66c97311bc2d3e123b8d29cd69ab743d", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/database.py", "fields": [{"name": "DATABASE_URL = os.getenv(\"POSTGRES_URL\") or os.getenv(\"DATABASE_URL\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "engine = create_engine(DATABASE_URL, pool_pre_ping=True)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"24": ""}]}